from numpy import *
import operator

# 创建一个数据集，包含2个类别共4个样本
def createDataSet():
    # 生成一个矩阵，每行表示一个样本
    group = array([[2.0, 1.8], [1.9, 2.0], [0.1, 0.1], [0.2, 0.0]])
    # 4个样本分别所属的类别
    labels = ['m', 'm', 'n', 'n']
    return group, labels

# KNN分类算法函数
def kNNClassify(newInput, dataSet, labels, k):
    numSamples = dataSet.shape[0]   # shape[0]表示行数

    # #计算距离
    diff = tile(newInput, (numSamples, 1)) - dataSet  # 按元素求差值
    squaredDiff = diff ** 2  # 将差值平方
    squaredDist = sum(squaredDiff, axis = 1)   # 累加
    distance = squaredDist ** 0.5  # 将差值平方和求开方得到距离

    # # 对距离排序
    sortedDistIndices = argsort(distance)
    classCount = {} # define a dictionary (can be append element)
    for i in xrange(k):        #  选择k个最近邻
        voteLabel = labels[sortedDistIndices[i]]
        # #  计算k个最近邻中各类别出现的次数
        classCount[voteLabel] = classCount.get(voteLabel, 0) + 1

    # # 返回出现次数最多的类别标签
    maxCount = 0
    for key, value in classCount.items():
        if value > maxCount:
            maxCount = value
            result = key

    return result
